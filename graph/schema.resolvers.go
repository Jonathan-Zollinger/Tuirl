package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.24

import (
	"context"
	"fmt"

	"github.com/Jonathan-Zollinger/Tuirl/graph/model"
)

// CreateNotecard is the resolver for the createNotecard field.
func (r *mutationResolver) CreateNotecard(ctx context.Context, input model.NewNotecard) (*model.Notecard, error) {
	panic(fmt.Errorf("not implemented: CreateNotecard - createNotecard"))
}

// CreateSection is the resolver for the createSection field.
func (r *mutationResolver) CreateSection(ctx context.Context, input model.NewSection) (*model.Section, error) {
	panic(fmt.Errorf("not implemented: CreateSection - createSection"))
}

// Notecards is the resolver for the notecards field.
func (r *queryResolver) Notecards(ctx context.Context) ([]*model.Notecard, error) {
	panic(fmt.Errorf("not implemented: Notecards - notecards"))
}

// Sections is the resolver for the sections field.
func (r *queryResolver) Sections(ctx context.Context) ([]*model.Section, error) {
	panic(fmt.Errorf("not implemented: Sections - sections"))
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
